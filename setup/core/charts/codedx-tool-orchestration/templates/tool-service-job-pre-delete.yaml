apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "codedx-tool-orchestration.pre-delete-job" . | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "codedx-tool-orchestration.commonLabels" . | nindent 4 }}
    component: hook
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      labels:
        {{- include "codedx-tool-orchestration.commonLabels" . | nindent 8 }}
        component: hook
    spec:
      {{- if .Values.toolServiceImagePullSecrets }}
      imagePullSecrets:
      {{- toYaml .Values.toolServiceImagePullSecrets | nindent 6 }}
      {{- end }}
      serviceAccountName: {{ include "codedx-tool-orchestration.serviceAccountName" . | quote }}
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      restartPolicy: Never
      containers:
      - name: cleanup-projects-job
        image: "{{ required "imageNameHelmPreDelete is required" .Values.imageNameHelmPreDelete }}"
        command: ["/opt/codedx/cleanup/bin/cleanup"]
        args: ["-kubernetesNamespace", "{{ .Release.Namespace }}",
          "-logFile", "/opt/codedx/cleanup/logs/cleanup.log",
          "-logMaxSizeMB", "{{ .Values.logs.maxSizeMB }}",
          "-logMaxBackups", "{{ .Values.logs.maxBackups }}",
          "-minioAdminClientPath", "/opt/codedx/cleanup/tools/mc",
          "-minioAdminPasswordPath", "/opt/codedx/cleanup/secrets/minioAdminPassword",
          "-minioAdminUsernamePath", "/opt/codedx/cleanup/secrets/minioAdminUsername",
          "-minioEndpoint", "{{ template "minio.ref.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{.Values.minio.service.port}}",
          {{ if .Values.minio.tls.enabled -}}
          "-minioTlsEnabled",
          {{ if .Values.minioTlsTrust.configMapName -}}
          "-minioTlsConfigMapName", "{{ .Values.minioTlsTrust.configMapName }}",
          "-minioTlsConfigMapPublicCertName", "{{ .Values.minioTlsTrust.configMapPublicCertKeyName }}",
          {{ end -}}
          {{ end -}}
          "-workDir", "/opt/codedx/cleanup/work"]
        volumeMounts:
        - name: minio-secret-volume
          mountPath: "/opt/codedx/cleanup/secrets/minioAdminUsername"
          readOnly: true
          subPath: minioAdminUsername
        - name: minio-secret-volume
          mountPath: "/opt/codedx/cleanup/secrets/minioAdminPassword"
          readOnly: true
          subPath: minioAdminPassword
        {{- if and .Values.minio.tls.enabled .Values.minioTlsTrust.configMapName }}
        - name: minio-cert-volume
          mountPath: /etc/ssl/certs/cdx-minio.pem
          subPath: cdx-minio.pem
          readOnly: true
        {{- end }}
        {{- if .Values.toolServiceTls.secret }}
        - name: tool-service-tls-volume
          mountPath: "/opt/codedx/cleanup/tls"
        {{- end }}
      volumes:
      - name: minio-secret-volume
        secret:
          secretName: {{ .Values.minio.global.minio.existingSecret | quote }}
          items:
          - key: access-key
            path: minioAdminUsername
          - key: secret-key
            path: minioAdminPassword
      {{- if and .Values.minio.tls.enabled .Values.minioTlsTrust.configMapName }}
      - name: minio-cert-volume
        configMap:
          name: {{ .Values.minioTlsTrust.configMapName }}
          items:
            - key: {{ .Values.minioTlsTrust.configMapPublicCertKeyName }}
              path: cdx-minio.pem
      {{- end }}
      {{- if .Values.toolServiceTls.secret }}
      - name: tool-service-tls-volume
        secret:
          secretName: {{ .Values.toolServiceTls.secret }}
      {{- end }}
