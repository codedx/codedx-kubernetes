apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "codedx.props.configMapName" . | quote }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "codedx.commonLabels" . | nindent 4 }}
data:
  {{- $tlsOpts := "" -}}
  {{- if .Values.codedxTls.componentEnabled -}}
  {{-   $tlsOpts = "?useSSL=true&requireSSL=true" -}}
  {{- end -}}
  {{- $dbUrl := (printf "jdbc:mysql://%s-mariadb/codedx%s" .Release.Name $tlsOpts) -}}
  {{- if not .Values.mariadb.enabled -}}
  {{-   $dbUrl = (required ".Values.codedxProps.dbconnection.externalDbUrl must be specified when using an external MariaDB instance" .Values.codedxProps.dbconnection.externalDbUrl) -}}
  {{- end -}}

  {{- if contains "?" $dbUrl -}}
  {{-   $dbUrl = (printf "%s&" $dbUrl) -}}
  {{- else -}}
  {{-   $dbUrl = (printf "%s?" $dbUrl) -}}
  {{- end -}}

  {{- $sessionVariables := "sessionVariables=sql_mode='STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'" -}}
  {{- $dbUrl = (printf "%s%s" $dbUrl $sessionVariables) }}

  codedx.props: |-
    swa.db.url = {{ $dbUrl }}
    swa.db.driver = com.mysql.jdbc.Driver

  tomcat.env: |-
    CATALINA_OPTS='{{ include "codedx.props.params.combined" . }}'
    CATALINA_OPTS="$CATALINA_OPTS {{ default "" .Values.codedxJavaOpts }}"
    CATALINA_OPTS="$CATALINA_OPTS -Djavax.net.ssl.keystorepassword='$KEYSTORE_KEY' -Dcodedx.autoupdate=true"

  codedx-ml.props: |-
    codedx.external-url = {{ include "codedx.serviceurl" . | quote }}

  logback.xml: |-
    <configuration>
      <appender name="logFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${codedx.log.dir}/codedx.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
          <!-- rollover daily -->
          <fileNamePattern>${codedx.log.dir}/codedx-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
          <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
            <!-- or whenever the file size reaches 100MB -->
            <maxFileSize>100MB</maxFileSize>
          </timeBasedFileNamingAndTriggeringPolicy>
          <!-- keep 7 days worth of history -->
          <maxHistory>7</maxHistory>
          <cleanHistoryOnStart>true</cleanHistoryOnStart>
        </rollingPolicy>
        <encoder>
          <pattern>%-5level %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %logger{36} - %msg%n</pattern>
        </encoder>
      </appender>
      <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
          <pattern>%-5level %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %logger{36} - %msg%n</pattern>
        </encoder>
      </appender>
      <logger name="net.liftweb" level="WARN" />
      <root level="INFO">
        <appender-ref ref="logFile" />
        <appender-ref ref="stdout" />
      </root>
    </configuration>

  {{ range .Values.codedxProps.extra }}
  {{ if eq (required "codedxProps.extra entries must have a 'type' defined!" .type) "values" -}}
  {{ .key }}: |-
    {{- range .values -}}
    {{- . | nindent 4 }}
    {{- end -}}
  {{- end }}
  {{- end }}

  {{ range .Values.codedxProps.internalExtra }}
  {{ if eq (required "codedxProps.internalExtra entries must have a 'type' defined!" .type) "values" -}}
  {{ .key }}: |-
    {{- range .values -}}
    {{- . | nindent 4 }}
    {{- end -}}
  {{- end }}
  {{- end }}

  {{ if .Values.authentication.saml.enabled -}}
  codedx-saml.props: |-
    auth.saml2.identityProviderMetadataPath = /opt/codedx/saml-idp.xml
    auth.hostBasePath = {{ .Values.authentication.hostBasePath | quote }}
    auth.saml2.entityId = {{ .Values.authentication.saml.appName | quote }}
  {{- end -}}
